services:
  # TODO: create a seperate MQTT -> Database agent


  db:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=example
    volumes:
      - psql-data:/var/lib/postgresql/data

  mqtt:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - mqtt-config:/mosquitto/config

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-mongodb-datasource
    volumes:
      - grafana-data:/var/lib/grafana

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend/nginx/templates:/etc/nginx/templates
      - ./frontend/app/build:/usr/share/nginx/html
    depends_on:
      - vouch
    ports:
      - "80:80"
      #- "443:443"
    environment:
      - OAUTH_CLIENT_ID
      - AUTH0_DOMAIN

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    volumes:
      - ./backend:/app

  vouch:
    image: voucher/vouch-proxy
    volumes:
      - ./vouch/config/config.yml:/config/config.yml
    environment:
      - OAUTH_CLIENT_ID
      - OAUTH_CLIENT_SECRET

volumes:
  psql-data: {}
  mqtt-config: {}
  grafana-data: {}
